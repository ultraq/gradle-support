/*
 * Copyright 2024, Emanuel Rabina (http://www.ultraq.net.nz/)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
	id 'java-gradle-plugin'
	id 'maven-publish'
	id 'signing'
	id 'com.gradle.plugin-publish' version '1.3.1'
	id 'nz.net.ultraq.gradle.fluent-configuration' version '0.5.0'
}

description = 'Gradle support plugins for use in my own projects'
version = '0.5.1-SNAPSHOT'
group = 'nz.net.ultraq.gradle'

// @formatter:off
configure {
	createGroovyProject()
		.useJavaVersion(17)
		.useMavenCentralRepositories()
		.withSourcesJar()
		.configureSource()
			.withSourceDirectory('source')
			.withDependencies() {
				implementation 'com.gradleup.shadow:shadow-gradle-plugin:8.3.8'
			}
		.configureTesting()
			.withTestDirectory('test')
			.withTestDependencies() {
				testImplementation 'org.spockframework:spock-core:2.3-groovy-4.0'
			}
			.useJUnitJupiter()
			.useJacoco()
}
// @formatter:on

afterEvaluate {
	tasks.named('sourcesJar', Jar) {
		duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	}
}

gradlePlugin {
	website = 'https://github.com/ultraq/gradle-support'
	vcsUrl = 'https://github.com/ultraq/gradle-support.git'
	plugins {
		useMavenCentralRepositoriesPlugin {
			id = 'nz.net.ultraq.gradle.use-maven-central-repositories'
			implementationClass = 'nz.net.ultraq.gradle.UseMavenCentralRepositoriesPlugin'
			displayName = 'Use Maven Central and Snapshot repositories'
			description =
				'Adds the Maven Central and Snapshots repositories to a single project, or all projects ' +
				'if added to a settings file.'
			tags = ['maven', 'repository']
		}
		fluentConfigurationPlugin {
			id = 'nz.net.ultraq.gradle.fluent-configuration'
			implementationClass = 'nz.net.ultraq.gradle.FluentConfigurationPlugin'
			displayName = 'A fluent API for configuring projects'
			description =
				'Adds a `configure` script block to a `build.gradle` file, within which a fluent API can ' +
				'be used to configure a project.'
			tags = ['fluent', 'configuration']
		}
	}
}

publishing {
	repositories {
		maven {
			url = file('../test-maven-repository')
		}
	}
}
